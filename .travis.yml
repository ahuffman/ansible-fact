language: python
branches:
  only:
    - dev
services:
  - docker

install: skip
before_script:
  # prep Ubuntu VM
  - pip install ansible jmespath
  - sudo apt-get update
  - sudo apt-get install -y acl
  ### ensure root owns as there is no travis user/group in containers (uid:2000)
  - sudo chown -R root.root ../ansible-fact
  # prep containers
  - docker pull ahuffman/afbullseye:latest
  - docker pull ahuffman/afcentos7:latest
  - cd ../
  - pwd
  # fire up the pre-built testing Ansible containers
  - docker run -it --name bullseye -d -v `pwd`/ansible-fact:/home/travis/build/ahuffman/ansible-fact:z ahuffman/afbullseye:latest /bin/bash
  - docker run -it --name centos7 -d -v `pwd`/ansible-fact:/home/travis/build/ahuffman/ansible-fact:z ahuffman/afcentos7:latest /bin/bash

script:
  # Run tests on Ubuntu VM
  - echo "Ubuntu VM info:"
  - cat /etc/os-release
  - uname -a
  - getfacl /home/travis/build/ahuffman/ansible-fact/os_facts/tests/roles/test_cron_facts/files/crontabs
  - echo "Test Ubuntu:"
  - /home/travis/build/ahuffman/ansible-fact/os_facts/tests/travis-script.sh
  # Run tests on Debian Bullseye
  - echo "Debian Bullseye container info:"
  - docker inspect bullseye
  # - docker exec -it bullseye /bin/bash -c 'echo $PATH'
  - docker exec -it bullseye /bin/bash -c 'getenforce'
  - docker exec -it bullseye /bin/bash -c 'getfacl /home/travis/build/ahuffman/ansible-fact/os_facts/tests/roles/test_cron_facts/files/crontabs'
  - echo "Test Debian Bullseye:"
  - docker exec -it bullseye /home/travis/build/ahuffman/ansible-fact/os_facts/tests/travis-script.sh
  # Run tests on CentOS7
  - echo "CentOS7 container info:"
  - docker inspect centos7
  - docker exec -it centos7 /bin/bash -c 'getenforce'
  - docker exec -it centos7 /bin/bash -c 'getfacl /home/travis/build/ahuffman/ansible-fact/os_facts/tests/roles/test_cron_facts/files/crontabs'
  - echo "Test CentOS7:"
  - docker exec -it centos7 /home/travis/build/ahuffman/ansible-fact/os_facts/tests/travis-script.sh
